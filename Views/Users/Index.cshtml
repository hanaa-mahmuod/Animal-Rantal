@using Microsoft.EntityFrameworkCore;

@model List<Animal_Rental.Models.UsersModelView>
@{
    ViewData["Title"] = "Users Details";
}
<div class="sidebar w-100 text-center" style="height:50px;background-color:gray">

    <div class="d-flex justify-content-between">
        <h3 class="admin-label">Admin</h3>
        <a class="sidebar-links" asp-controller="Admin" asp-action="Index" asp-route-id="7">Dashboard</a>
        <a class="sidebar-links" asp-controller="Complaints" asp-action="Index" asp-route-id="7">Manage Complaints</a>
        <a class="sidebar-links" asp-controller="Users" asp-action="Index" asp-route-id="7">Manage Users</a>
        <a class="sidebar-links" asp-controller="Articals" asp-action="Create" >Create Article</a>
    </div>

    @*  <a class="sidebar-links" asp-controller="Articals" asp-action="Read" asp-route-id="7">Articles</a> *@
</div>
@functions {
    public string HashPassword(string password)
    {
        using (var sha256 = System.Security.Cryptography.SHA256.Create())
        {
            var hashedBytes = sha256.ComputeHash(System.Text.Encoding.UTF8.GetBytes(password));
            var hashedString = BitConverter.ToString(hashedBytes).Replace("-", "").ToLower();
            var hashedWithAsterisks = new string('*', password.Length);
            return hashedWithAsterisks;
        }
    }
}


<div class="row mt-3">
    <div class="col-md-6 offset-md-3">
        <div class="input-group">
            <input type="text" id="searchInput" onkeyup="filterTable()" class="form-control" placeholder="Search by email...">
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="button">Search</button>
            </div>
        </div>
    </div>
</div>


<div class="mt-3"></div>

<table class="table table-responsive table-hover table-bordered">

    <thead>
        <tr class="table-active">
            <th>Id</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>National ID</th>
            <th>Age</th>
            <th>Phone</th>
            <th>Address</th>
            <th>Job</th>
            <th>Gender</th>
            <th>Email</th>
            <th>Password (Hashed)</th>
            <th>complaints</th>
            <th>Actions</th>
        </tr>
    </thead>

    <tbody>

        @if (Model != null && Model.Any())
        {
            @foreach (var user in Model)
            {
                if (@user.Email.ToLower() != "admin2@gmail.com")
                {
                    
                        <tr>
                            <td>@user.Id</td>
                            <td>@user.First_Name</td>
                            <td>@user.Last_Name</td>
                            <td>@user.National_ID</td>
                            <td>@user.Age</td>
                            <td>@user.Phone</td>
                            <td>@user.Address</td>
                            <td>@user.Job</td>
                            <td>@user.Gender</td>
                            <td>@user.Email</td>
                            <td>@HashPassword(user.Password)</td>
                            <td>
                            @{
                                int key = 0;
                                foreach (var email in ViewData["DefendantEmails"] as List<string>)
                                {
                                    if (email == @user.Email)
                                    {
                                        <span>have complaint</span>
                                        key = 1;
                                        break;
                                    }
                                }
                                if (key == 0)
                                {
                                    <span>no complaint</span>
                                }
                            }
                            </td>
                            <td>
                                <div class="btn-group btn-group-sm">
                                    <button type="button" onclick="confirmDelete(@user.Id)" class="btn btn-danger">Delete</button>
                                </div>
                            </td>
                        </tr>
                    
                }
            }
        }
        else
        {
            <tr>
                <td colspan="12">No users</td>
            </tr>
        }
    </tbody>
</table>


<script>
    function filterTable() {

        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("searchInput");
        filter = input.value.toUpperCase();
        table = document.querySelector("table");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[9];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
   
        function confirmDelete(userId) {
            console.log("Deleting user with ID:", userId);

            if (confirm("Are you sure you want to delete this user?")) {
                console.log("User confirmed deletion.");

                $.ajax({
                    url: '/Users/Delete/' + userId,
                    type: 'POST',
                    success: function (result) {
                        window.location.reload();
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);
                    }
                });
            } else {
                console.log("Deletion canceled by Admin.");
            }
        }
</script>

<style>
    /* Sidebar styles */
    body {
        background-color: #f2f2f2; /* Set background color to gray */
    }

    .navbar {
        background-color: black; /* Set navbar background color to black */
    }

    .navbar-brand {
        color: gray !important; /* Set navbar brand text color to white */
        text-decoration: none; /* Remove default underline */
    }

    .navbar-nav .nav-link {
        color: white !important; /* Set navbar link text color to white */
    }

    .footer {
        background-color: black; /* Set footer background color to black */
        color: white; /* Set footer text color to white */
        padding: 20px 0; /* Add padding to the footer */
    }

    

    /* Main content styles */
    .content {
        margin-left: 220px; /* Adjust the margin to make space for the sidebar */
        padding-top: 60px; /* Adjust the padding to make space for the header */
    }

    .admin-label {
        color: white; /* Set text color to white */
        font-weight: bold; /* Make the text bold */
        margin-bottom: 100px; /* Add space below the label */
        font-size: 24px; /* Increase font size */
    }

    /* Style for the links in the sidebar */
    .sidebar-links {
        color: white; /* Set link text color to white */
        text-decoration: none; /* Remove default underline */
        display: block; /* Make links block elements */
        margin-bottom: 10px; /* Add some space between links */
        margin-left: 20px;
        margin-bottom: 5px;
        font-size: 15px;
    }
</style>